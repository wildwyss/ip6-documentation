
@online{frege_goodness,
	title = {Introduction · Frege Goodness},
	url = {https://dierk.gitbooks.io/fregegoodness/content/},
	urldate = {2023-06-15},
	file = {Introduction · Frege Goodness:/home/andri/Zotero/storage/QQEQFLZN/content.html:text/html},
}

@article{hughes_why_1989,
	title = {Why Functional Programming Matters},
	volume = {32},
	issn = {0010-4620, 1460-2067},
	url = {https://academic.oup.com/comjnl/article-lookup/doi/10.1093/comjnl/32.2.98},
	doi = {10.1093/comjnl/32.2.98},
	abstract = {As software becomes more and more complex, it is more and more important to structure it well. Well-structured software is easy to write and to debug, and provides a collection of modules that can be reused to reduce future programming costs. In this paper we show that two features of functional languages in particular, higher-order functions and lazy evaluation, can contribute signiﬁcantly to modularity. As examples, we manipulate lists and trees, program several numerical algorithms, and implement the alpha-beta heuristic (an algorithm from Artiﬁcial Intelligence used in game-playing programs). We conclude that since modularity is the key to successful programming, functional programming oﬀers important advantages for software development.},
	pages = {98--107},
	number = {2},
	journaltitle = {The Computer Journal},
	shortjournal = {The Computer Journal},
	author = {Hughes, J.},
	urldate = {2023-06-15},
	date = {1989-02-01},
	langid = {english},
	file = {Hughes - 1989 - Why Functional Programming Matters.pdf:/home/andri/Zotero/storage/Z8REGY7C/Hughes - 1989 - Why Functional Programming Matters.pdf:application/pdf},
}

@software{lervag_vimtex_2023,
	title = {{VimTeX}},
	rights = {{MIT}},
	url = {https://github.com/lervag/vimtex},
	abstract = {{VimTeX}: A modern Vim and neovim filetype plugin for {LaTeX} files.},
	author = {Lervåg, Karl Yngve},
	urldate = {2023-06-16},
	date = {2023-06-16},
	note = {original-date: 2013-10-05T11:55:11Z},
	keywords = {filetype-plugin, latex, neovim, tex, vim, vim-plugin, vimtex},
}

@online{mdn_protocols,
	title = {Iteration protocols - {JavaScript} {MDN}},
	url = {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols},
	abstract = {Iteration protocols aren't new built-ins or syntax, but protocols. These protocols can be implemented by any object by following some conventions.},
	urldate = {2023-06-16},
	date = {2023-05-03},
	langid = {american},
	file = {Snapshot:/home/andri/Zotero/storage/6GX2WTLV/Iteration_protocols.html:text/html},
}

@online{mdn_prototype_2023,
	title = {Object prototypes - Learn web development {MDN}},
	url = {https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes},
	abstract = {This article has covered {JavaScript} object prototypes, including how prototype object chains allow objects to inherit features from one another, the prototype property and how it can be used to add methods to constructors, and other related topics.},
	urldate = {2023-06-19},
	date = {2023-02-24},
	langid = {american},
}

@online{monads_adit_2013,
	title = {Functors, Applicatives, And Monads In Pictures - adit.io},
	url = {https://www.adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html},
	urldate = {2023-06-19},
  date = {2013-04-17},
	file = {Functors, Applicatives, And Monads In Pictures - adit.io:/home/andri/Zotero/storage/YR7YS3TU/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html:text/html},
}

@online{java_stream,
	title = {Stream (Java Platform {SE} 8 )},
	url = {https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html},
	urldate = {2023-06-20},
	file = {Stream (Java Platform SE 8 ):/home/andri/Zotero/storage/MUTKMAI2/Stream.html:text/html},
}

@online{kolibri,
	title = {Kolibri},
	url = {https://webengineering-fhnw.github.io/Kolibri/},
	urldate = {2023-06-20},
	file = {Kolibri:/home/andri/Zotero/storage/JW3JZN9Y/Kolibri.html:text/html},
}

@misc{baeldung_higher-kinded_2020,
	title = {Higher-{Kinded} {Types} {Baeldung} on {Scala}},
	url = {https://www.baeldung.com/scala/higher-kinded-types},
	abstract = {Learn about Higher-Kinded Types in Scala and how to use them.},
	language = {en-US},
	urldate = {2023-06-20},
	author = {{baeldung}},
	month = aug,
	year = {2020},
	file = {Snapshot:/Users/wysstobi/Zotero/storage/WPDXS7DJ/higher-kinded-types.html:text/html},
}

@book{hutton_pih_2016,
	edition = 2,
	title = {Programming in Haskell : Graham Hutton},
	isbn = {978-1-316-62622-1},
	shorttitle = {Programming in Haskell},
	abstract = {Haskell is a purely functional language that allows programmers to rapidly develop clear, concise, and correct software. The language has grown in popularity in recent years, both in teaching and in industry. This book is based on the author's experience of teaching Haskell for more than twenty years. All concepts are explained from first principles and no programming experience is required, making this book accessible to a broad spectrum of readers. While Part I focuses on basic concepts, Part {II} introduces the reader to more advanced topics. This new edition has been extensively updated and expanded to include recent and more advanced features of Haskell, new examples and exercises, selected solutions, and freely downloadable lecture slides and example code. The presentation is clean and simple, while also being fully compliant with the latest version of the language, including recent changes concerning applicative, monadic, foldable, and traversable types.},
	publisher = {Cambridge University Press},
	author = {Hutton, Graham},
	date = {2016-09},
	file = {Snapshot:/Users/wysstobi/Zotero/storage/K8GKZ4X9/vbook.html:text/html},
}

@book{gang_of_four_depa,
  added-at = {2010-06-05T16:40:25.000+0200},
  asin = {0201633612},
  author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John M.},
  description = {Design Patterns: Elements of Reusable Object-Oriented Software (9780201633610): Erich Gamma, Richard Helm, Ralph Johnson, John M. Vlissides: Books},
  dewey = {005.12},
  ean = {9780201633610},
  edition = 1,
  interhash = {7fe32957be97afaf4ecb38b5490d23b4},
  intrahash = {7e3f1154ab1fbce54752a46dba7f2217},
  isbn = {0201633612},
  keywords = {DBIS Design Object-Oriented Patterns SS2010 Seminar Software},
  publisher = {Addison-Wesley Professional},
  timestamp = {2010-06-05T16:40:25.000+0200},
  title = {Design Patterns: Elements of Reusable Object-Oriented Software},
  year = 1994
}

@online{jsdoc_use_2023,
	title = {Use {JSDoc}: Index},
	url = {https://jsdoc.app/},
	urldate = {2023-06-22},
	file = {Use JSDoc\: Index:/Users/wysstobi/Zotero/storage/EZA32HEJ/jsdoc.app.html:text/html},
}

@online{billwagner_language-integrated_2023,
	title = {Language-Integrated Query ({LINQ}) (C\#)},
	url = {https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/},
	abstract = {Learn about Language-Integrated Queries ({LINQs}) and review an example of the complete query operation.},
	author = {{BillWagner}},
	urldate = {2023-06-21},
	date = {2023-03-09},
	langid = {english},
	file = {Snapshot:/Users/wysstobi/Zotero/storage/NU9YVVWE/linq.html:text/html},
}

@book{eilebrecht_patterns_2019,
	location = {Berlin, Heidelberg},
	title = {Patterns kompakt: Entwurfsmuster für effektive Softwareentwicklung},
	isbn = {978-3-662-57936-7 978-3-662-57937-4},
	url = {http://link.springer.com/10.1007/978-3-662-57937-4},
	series = {{IT} kompakt},
	shorttitle = {Patterns kompakt},
	publisher = {Springer Berlin Heidelberg},
	author = {Eilebrecht, Karl and Starke, Gernot},
	urldate = {2023-06-21},
	date = {2019},
	langid = {german},
	doi = {10.1007/978-3-662-57937-4},
	file = {Eilebrecht-Starke2019_Book_PatternsKompakt.pdf:/home/andri/fhnw/books/depa-books/Eilebrecht-Starke2019_Book_PatternsKompakt.pdf:application/pdf},
}

@article{quickcheck_hughes,
	title = {{QuickCheck}: A Lightweight Tool for Random Testing of Haskell Programs},
	abstract = {{QuickCheck} is a tool which aids the Haskell programmer in formulating and testing properties of programs. Properties are described as Haskell functions, and can be automatically tested on random input, but it is also possible to dene custom test data generators. We present a number of case studies, in which the tool was successfully used, and also point out some pitfalls to avoid. Random testing is especially suitable for functional programs because properties can be stated at a ne grain. When a function is built from separately tested components, then random testing su ces to obtain good coverage of the de nition under test.},
	author = {Claessen, Koen and Hughes, John},
	langid = {english},
	file = {Claessen and Hughes - QuickCheck A Lightweight Tool for Random Testing .pdf:/home/andri/Zotero/storage/TUB48DBT/Claessen and Hughes - QuickCheck A Lightweight Tool for Random Testing .pdf:application/pdf},
}

@online{haskell_monoid,
	title = {Prelude},
	url = {https://hackage.haskell.org/package/base-4.18.0.0/docs/Prelude.html#t:Monoid},
	urldate = {2023-06-23},
	file = {Prelude:/home/andri/Zotero/storage/VNFMB4JE/Prelude.html:text/html},
}
